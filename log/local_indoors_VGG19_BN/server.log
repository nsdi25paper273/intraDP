[W kineto_shim.cpp:372] Profiler is not initialized: skipping step() invocation
STAGE:2024-09-20 00:12:25 3868139:3868139 ActivityProfilerController.cpp:312] Completed Stage: Warm Up
STAGE:2024-09-20 00:12:25 3868139:3868139 ActivityProfilerController.cpp:318] Completed Stage: Collection
STAGE:2024-09-20 00:12:25 3868139:3868139 ActivityProfilerController.cpp:322] Completed Stage: Post Processing
Configuring torch to use deterministic behaviors.
parallel approach select
constraint_latency False
starting ParallelCollaborativeInference server...
Serving on ('0.0.0.0', 12345)
Ctrl on ('0.0.0.0', 12346)
server for ('192.168.50.102', 49728): client connected.
server for ('192.168.50.102', 49728): model VGG_137M_192.168.50.102 initial complete.
server for ('192.168.50.102', 49728): recv init input from client
Input size 0.5746MB
Forwarding for 1(+2 warmup and 3 repeat) times for initialization.
Forward of the original model takes average 0.0103s.
pickle.dumps size to time poly: 
           2
2.793e-17 x + 4.147e-10 x + 0.0001142
pickle.loads size to time poly: 
           2
1.197e-17 x + 2.449e-10 x + 0.0001172
Output size 0.0042MB
Local random exec takes average 0.0095s.
Using torch.profiler for op profile
Operator records (align ops time with factor 1.0830): 
0 _start: input_from: [], output_to: [1], output_shapes: [torch.Size([1, 3, 224, 224])], barrier: True, local dim: 3;  accu_time 0.0000s
1 conv2d: input_from: [0], output_to: [2], output_shapes: [torch.Size([1, 64, 224, 224])], barrier: False, local dim: 3;  accu_time 0.0003s
2 batch_norm: input_from: [1], output_to: [3], output_shapes: [torch.Size([1, 64, 224, 224])], barrier: False, local dim: 3;  accu_time 0.0004s
3 relu: input_from: [2], output_to: [4], output_shapes: [torch.Size([1, 64, 224, 224])], barrier: False, local dim: 3;  accu_time 0.0005s
4 conv2d: input_from: [3], output_to: [5], output_shapes: [torch.Size([1, 64, 224, 224])], barrier: False, local dim: 3;  accu_time 0.0018s
5 batch_norm: input_from: [4], output_to: [6], output_shapes: [torch.Size([1, 64, 224, 224])], barrier: False, local dim: 3;  accu_time 0.0019s
6 relu: input_from: [5], output_to: [7], output_shapes: [torch.Size([1, 64, 224, 224])], barrier: False, local dim: 3;  accu_time 0.0020s
7 max_pool2d: input_from: [6], output_to: [8], output_shapes: [torch.Size([1, 64, 112, 112])], barrier: False, local dim: 3;  accu_time 0.0021s
8 conv2d: input_from: [7], output_to: [9], output_shapes: [torch.Size([1, 128, 112, 112])], barrier: False, local dim: 3;  accu_time 0.0025s
9 batch_norm: input_from: [8], output_to: [10], output_shapes: [torch.Size([1, 128, 112, 112])], barrier: False, local dim: 3;  accu_time 0.0026s
10 relu: input_from: [9], output_to: [11], output_shapes: [torch.Size([1, 128, 112, 112])], barrier: False, local dim: 3;  accu_time 0.0026s
11 conv2d: input_from: [10], output_to: [12], output_shapes: [torch.Size([1, 128, 112, 112])], barrier: False, local dim: 3;  accu_time 0.0034s
12 batch_norm: input_from: [11], output_to: [13], output_shapes: [torch.Size([1, 128, 112, 112])], barrier: False, local dim: 3;  accu_time 0.0034s
13 relu: input_from: [12], output_to: [14], output_shapes: [torch.Size([1, 128, 112, 112])], barrier: False, local dim: 3;  accu_time 0.0035s
14 max_pool2d: input_from: [13], output_to: [15], output_shapes: [torch.Size([1, 128, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0035s
15 conv2d: input_from: [14], output_to: [16], output_shapes: [torch.Size([1, 256, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0038s
16 batch_norm: input_from: [15], output_to: [17], output_shapes: [torch.Size([1, 256, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0039s
17 relu: input_from: [16], output_to: [18], output_shapes: [torch.Size([1, 256, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0039s
18 conv2d: input_from: [17], output_to: [19], output_shapes: [torch.Size([1, 256, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0045s
19 batch_norm: input_from: [18], output_to: [20], output_shapes: [torch.Size([1, 256, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0045s
20 relu: input_from: [19], output_to: [21], output_shapes: [torch.Size([1, 256, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0045s
21 conv2d: input_from: [20], output_to: [22], output_shapes: [torch.Size([1, 256, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0051s
22 batch_norm: input_from: [21], output_to: [23], output_shapes: [torch.Size([1, 256, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0052s
23 relu: input_from: [22], output_to: [24], output_shapes: [torch.Size([1, 256, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0052s
24 conv2d: input_from: [23], output_to: [25], output_shapes: [torch.Size([1, 256, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0058s
25 batch_norm: input_from: [24], output_to: [26], output_shapes: [torch.Size([1, 256, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0058s
26 relu: input_from: [25], output_to: [27], output_shapes: [torch.Size([1, 256, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0058s
27 max_pool2d: input_from: [26], output_to: [28], output_shapes: [torch.Size([1, 256, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0059s
28 conv2d: input_from: [27], output_to: [29], output_shapes: [torch.Size([1, 512, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0061s
29 batch_norm: input_from: [28], output_to: [30], output_shapes: [torch.Size([1, 512, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0062s
30 relu: input_from: [29], output_to: [31], output_shapes: [torch.Size([1, 512, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0062s
31 conv2d: input_from: [30], output_to: [32], output_shapes: [torch.Size([1, 512, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0067s
32 batch_norm: input_from: [31], output_to: [33], output_shapes: [torch.Size([1, 512, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0067s
33 relu: input_from: [32], output_to: [34], output_shapes: [torch.Size([1, 512, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0067s
34 conv2d: input_from: [33], output_to: [35], output_shapes: [torch.Size([1, 512, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0071s
35 batch_norm: input_from: [34], output_to: [36], output_shapes: [torch.Size([1, 512, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0073s
36 relu: input_from: [35], output_to: [37], output_shapes: [torch.Size([1, 512, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0073s
37 conv2d: input_from: [36], output_to: [38], output_shapes: [torch.Size([1, 512, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0078s
38 batch_norm: input_from: [37], output_to: [39], output_shapes: [torch.Size([1, 512, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0078s
39 relu: input_from: [38], output_to: [40], output_shapes: [torch.Size([1, 512, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0078s
40 max_pool2d: input_from: [39], output_to: [41], output_shapes: [torch.Size([1, 512, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0078s
41 conv2d: input_from: [40], output_to: [42], output_shapes: [torch.Size([1, 512, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0081s
42 batch_norm: input_from: [41], output_to: [43], output_shapes: [torch.Size([1, 512, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0081s
43 relu: input_from: [42], output_to: [44], output_shapes: [torch.Size([1, 512, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0081s
44 conv2d: input_from: [43], output_to: [45], output_shapes: [torch.Size([1, 512, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0083s
45 batch_norm: input_from: [44], output_to: [46], output_shapes: [torch.Size([1, 512, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0083s
46 relu: input_from: [45], output_to: [47], output_shapes: [torch.Size([1, 512, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0083s
47 conv2d: input_from: [46], output_to: [48], output_shapes: [torch.Size([1, 512, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0085s
48 batch_norm: input_from: [47], output_to: [49], output_shapes: [torch.Size([1, 512, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0085s
49 relu: input_from: [48], output_to: [50], output_shapes: [torch.Size([1, 512, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0085s
50 conv2d: input_from: [49], output_to: [51], output_shapes: [torch.Size([1, 512, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0088s
51 batch_norm: input_from: [50], output_to: [52], output_shapes: [torch.Size([1, 512, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0088s
52 relu: input_from: [51], output_to: [53], output_shapes: [torch.Size([1, 512, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0088s
53 max_pool2d: input_from: [52], output_to: [54], output_shapes: [torch.Size([1, 512, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0088s
54 adaptive_avg_pool2d: input_from: [53], output_to: [55], output_shapes: [torch.Size([1, 512, 7, 7])], barrier: True, local dim: None;  accu_time 0.0088s
55 flatten: input_from: [54], output_to: [56], output_shapes: [torch.Size([1, 25088])], barrier: True, local dim: None;  accu_time 0.0088s
56 linear: input_from: [55], output_to: [57], output_shapes: [torch.Size([1, 4096])], barrier: True, local dim: None;  accu_time 0.0101s
57 relu: input_from: [56], output_to: [58], output_shapes: [torch.Size([1, 4096])], barrier: True, local dim: None;  accu_time 0.0101s
58 dropout: input_from: [57], output_to: [59], output_shapes: [torch.Size([1, 4096])], barrier: True, local dim: None;  accu_time 0.0101s
59 linear: input_from: [58], output_to: [60], output_shapes: [torch.Size([1, 4096])], barrier: True, local dim: None;  accu_time 0.0103s
60 relu: input_from: [59], output_to: [61], output_shapes: [torch.Size([1, 4096])], barrier: True, local dim: None;  accu_time 0.0103s
61 dropout: input_from: [60], output_to: [62], output_shapes: [torch.Size([1, 4096])], barrier: True, local dim: None;  accu_time 0.0103s
62 linear: input_from: [61], output_to: [63], output_shapes: [torch.Size([1, 1000])], barrier: True, local dim: None;  accu_time 0.0103s
63 _end: input_from: [62], output_to: [-1], output_shapes: [torch.Size([1, 1000])], barrier: True, local dim: None;  accu_time 0.0103s
total 64 ops (filtered from 80 ops); time 0.0103s (aligned by 1.0830 sleep_step 100).

Computing plan for client.
Number of local ops 53
Number of global ops -54
server for ('192.168.50.102', 49728): init forward complete.
bw 0MB/s offload at [] recv at [] sleep for 0 ops est time 0.1675s.
bw 1MB/s offload at [] recv at [] sleep for 0 ops est time 0.1675s.
bw 2MB/s offload at [] recv at [] sleep for 0 ops est time 0.1675s.
bw 3MB/s offload at [] recv at [] sleep for 0 ops est time 0.1675s.
bw 4MB/s offload at [62] recv at [0] sleep for 1 ops est time 0.1575s.
bw 5MB/s offload at [62] recv at [0] sleep for 1 ops est time 0.1285s.
bw 6MB/s offload at [62] recv at [0] sleep for 1 ops est time 0.1093s.
bw 7MB/s offload at [62] recv at [0] sleep for 1 ops est time 0.0955s.
bw 8MB/s offload at [62] recv at [0] sleep for 1 ops est time 0.0852s.
bw 9MB/s offload at [62] recv at [0] sleep for 1 ops est time 0.0772s.
bw 10MB/s offload at [62] recv at [0] sleep for 1 ops est time 0.0707s.
bw 11MB/s offload at [62] recv at [0] sleep for 1 ops est time 0.0655s.
bw 12MB/s offload at [62] recv at [0] sleep for 1 ops est time 0.0611s.
bw 13MB/s offload at [62] recv at [0] sleep for 1 ops est time 0.0574s.
bw 14MB/s offload at [62] recv at [0] sleep for 1 ops est time 0.0542s.
bw 15MB/s offload at [62] recv at [0] sleep for 1 ops est time 0.0515s.
bw 16MB/s offload at [62] recv at [0] sleep for 1 ops est time 0.0491s.
bw 17MB/s offload at [62] recv at [0] sleep for 1 ops est time 0.0469s.
bw 18MB/s offload at [62] recv at [0] sleep for 1 ops est time 0.0451s.
bw 19MB/s offload at [62] recv at [0] sleep for 1 ops est time 0.0434s.
bw 20MB/s offload at [62] recv at [0] sleep for 1 ops est time 0.0418s.
bw 21MB/s offload at [62] recv at [0] sleep for 1 ops est time 0.0405s.
bw 22MB/s offload at [62] recv at [0] sleep for 1 ops est time 0.0392s.
bw 23MB/s offload at [62] recv at [0] sleep for 1 ops est time 0.0381s.
bw 24MB/s offload at [62] recv at [0] sleep for 1 ops est time 0.0370s.
bw 25MB/s offload at [62] recv at [0] sleep for 1 ops est time 0.0361s.
bw 26MB/s offload at [62] recv at [0] sleep for 1 ops est time 0.0352s.
bw 27MB/s offload at [62] recv at [0] sleep for 1 ops est time 0.0344s.
bw 28MB/s offload at [62] recv at [0] sleep for 1 ops est time 0.0336s.
bw 29MB/s offload at [62] recv at [0] sleep for 1 ops est time 0.0329s.
bw 30MB/s offload at [62] recv at [0] sleep for 1 ops est time 0.0322s.
Started send loop.
Started recv loop.
server for ('192.168.50.102', 49728): terminating server...
server for ('192.168.50.102', 49728): terminated.
Stopped server.
