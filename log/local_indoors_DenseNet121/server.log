[W kineto_shim.cpp:372] Profiler is not initialized: skipping step() invocation
STAGE:2024-09-20 00:19:35 3880998:3880998 ActivityProfilerController.cpp:312] Completed Stage: Warm Up
STAGE:2024-09-20 00:19:35 3880998:3880998 ActivityProfilerController.cpp:318] Completed Stage: Collection
STAGE:2024-09-20 00:19:35 3880998:3880998 ActivityProfilerController.cpp:322] Completed Stage: Post Processing
Configuring torch to use deterministic behaviors.
parallel approach select
constraint_latency False
starting ParallelCollaborativeInference server...
Serving on ('0.0.0.0', 12345)
Ctrl on ('0.0.0.0', 12346)
server for ('192.168.50.102', 40636): client connected.
server for ('192.168.50.102', 40636): model DenseNet_7M_192.168.50.102 initial complete.
server for ('192.168.50.102', 40636): recv init input from client
Input size 0.5746MB
Forwarding for 1(+2 warmup and 3 repeat) times for initialization.
Forward of the original model takes average 0.0105s.
pickle.dumps size to time poly: 
           2
-2.48e-17 x + 6.83e-10 x + 6.784e-05
pickle.loads size to time poly: 
           2
1.072e-16 x + 1.694e-10 x + 0.0001016
Output size 0.0042MB
Local random exec takes average 0.0100s.
Using torch.profiler for op profile
Operator records (align ops time with factor 0.3626): 
0 _start: input_from: [], output_to: [1], output_shapes: [torch.Size([1, 3, 224, 224])], barrier: True, local dim: 3;  accu_time 0.0000s
1 conv2d: input_from: [0], output_to: [2], output_shapes: [torch.Size([1, 64, 112, 112])], barrier: False, local dim: 3;  accu_time 0.0001s
2 batch_norm: input_from: [1], output_to: [3], output_shapes: [torch.Size([1, 64, 112, 112])], barrier: False, local dim: 3;  accu_time 0.0001s
3 relu: input_from: [2], output_to: [4], output_shapes: [torch.Size([1, 64, 112, 112])], barrier: False, local dim: 3;  accu_time 0.0001s
4 max_pool2d: input_from: [3], output_to: [5, 12, 19, 26, 33, 40, 47], output_shapes: [torch.Size([1, 64, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0001s
5 cat: input_from: [4], output_to: [6], output_shapes: [torch.Size([1, 64, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0001s
6 batch_norm: input_from: [5], output_to: [7], output_shapes: [torch.Size([1, 64, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0002s
7 relu: input_from: [6], output_to: [8], output_shapes: [torch.Size([1, 64, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0002s
8 conv2d: input_from: [7], output_to: [9], output_shapes: [torch.Size([1, 128, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0002s
9 batch_norm: input_from: [8], output_to: [10], output_shapes: [torch.Size([1, 128, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0002s
10 relu: input_from: [9], output_to: [11], output_shapes: [torch.Size([1, 128, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0002s
11 conv2d: input_from: [10], output_to: [12, 19, 26, 33, 40, 47], output_shapes: [torch.Size([1, 32, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0003s
12 cat: input_from: [4, 11], output_to: [13], output_shapes: [torch.Size([1, 96, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0003s
13 batch_norm: input_from: [12], output_to: [14], output_shapes: [torch.Size([1, 96, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0003s
14 relu: input_from: [13], output_to: [15], output_shapes: [torch.Size([1, 96, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0003s
15 conv2d: input_from: [14], output_to: [16], output_shapes: [torch.Size([1, 128, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0004s
16 batch_norm: input_from: [15], output_to: [17], output_shapes: [torch.Size([1, 128, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0004s
17 relu: input_from: [16], output_to: [18], output_shapes: [torch.Size([1, 128, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0004s
18 conv2d: input_from: [17], output_to: [19, 26, 33, 40, 47], output_shapes: [torch.Size([1, 32, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0005s
19 cat: input_from: [4, 11, 18], output_to: [20], output_shapes: [torch.Size([1, 128, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0005s
20 batch_norm: input_from: [19], output_to: [21], output_shapes: [torch.Size([1, 128, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0005s
21 relu: input_from: [20], output_to: [22], output_shapes: [torch.Size([1, 128, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0005s
22 conv2d: input_from: [21], output_to: [23], output_shapes: [torch.Size([1, 128, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0005s
23 batch_norm: input_from: [22], output_to: [24], output_shapes: [torch.Size([1, 128, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0005s
24 relu: input_from: [23], output_to: [25], output_shapes: [torch.Size([1, 128, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0006s
25 conv2d: input_from: [24], output_to: [26, 33, 40, 47], output_shapes: [torch.Size([1, 32, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0006s
26 cat: input_from: [4, 11, 18, 25], output_to: [27], output_shapes: [torch.Size([1, 160, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0006s
27 batch_norm: input_from: [26], output_to: [28], output_shapes: [torch.Size([1, 160, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0007s
28 relu: input_from: [27], output_to: [29], output_shapes: [torch.Size([1, 160, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0007s
29 conv2d: input_from: [28], output_to: [30], output_shapes: [torch.Size([1, 128, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0007s
30 batch_norm: input_from: [29], output_to: [31], output_shapes: [torch.Size([1, 128, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0007s
31 relu: input_from: [30], output_to: [32], output_shapes: [torch.Size([1, 128, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0007s
32 conv2d: input_from: [31], output_to: [33, 40, 47], output_shapes: [torch.Size([1, 32, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0008s
33 cat: input_from: [4, 11, 18, 25, 32], output_to: [34], output_shapes: [torch.Size([1, 192, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0008s
34 batch_norm: input_from: [33], output_to: [35], output_shapes: [torch.Size([1, 192, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0008s
35 relu: input_from: [34], output_to: [36], output_shapes: [torch.Size([1, 192, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0008s
36 conv2d: input_from: [35], output_to: [37], output_shapes: [torch.Size([1, 128, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0008s
37 batch_norm: input_from: [36], output_to: [38], output_shapes: [torch.Size([1, 128, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0008s
38 relu: input_from: [37], output_to: [39], output_shapes: [torch.Size([1, 128, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0009s
39 conv2d: input_from: [38], output_to: [40, 47], output_shapes: [torch.Size([1, 32, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0009s
40 cat: input_from: [4, 11, 18, 25, 32, 39], output_to: [41], output_shapes: [torch.Size([1, 224, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0009s
41 batch_norm: input_from: [40], output_to: [42], output_shapes: [torch.Size([1, 224, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0009s
42 relu: input_from: [41], output_to: [43], output_shapes: [torch.Size([1, 224, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0010s
43 conv2d: input_from: [42], output_to: [44], output_shapes: [torch.Size([1, 128, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0010s
44 batch_norm: input_from: [43], output_to: [45], output_shapes: [torch.Size([1, 128, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0010s
45 relu: input_from: [44], output_to: [46], output_shapes: [torch.Size([1, 128, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0010s
46 conv2d: input_from: [45], output_to: [47], output_shapes: [torch.Size([1, 32, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0011s
47 cat: input_from: [4, 11, 18, 25, 32, 39, 46], output_to: [48], output_shapes: [torch.Size([1, 256, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0011s
48 batch_norm: input_from: [47], output_to: [49], output_shapes: [torch.Size([1, 256, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0011s
49 relu: input_from: [48], output_to: [50], output_shapes: [torch.Size([1, 256, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0011s
50 conv2d: input_from: [49], output_to: [51], output_shapes: [torch.Size([1, 128, 56, 56])], barrier: False, local dim: 3;  accu_time 0.0011s
51 avg_pool2d: input_from: [50], output_to: [52, 59, 66, 73, 80, 87, 94, 101, 108, 115, 122, 129, 136], output_shapes: [torch.Size([1, 128, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0011s
52 cat: input_from: [51], output_to: [53], output_shapes: [torch.Size([1, 128, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0011s
53 batch_norm: input_from: [52], output_to: [54], output_shapes: [torch.Size([1, 128, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0012s
54 relu: input_from: [53], output_to: [55], output_shapes: [torch.Size([1, 128, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0012s
55 conv2d: input_from: [54], output_to: [56], output_shapes: [torch.Size([1, 128, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0012s
56 batch_norm: input_from: [55], output_to: [57], output_shapes: [torch.Size([1, 128, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0012s
57 relu: input_from: [56], output_to: [58], output_shapes: [torch.Size([1, 128, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0012s
58 conv2d: input_from: [57], output_to: [59, 66, 73, 80, 87, 94, 101, 108, 115, 122, 129, 136], output_shapes: [torch.Size([1, 32, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0013s
59 cat: input_from: [51, 58], output_to: [60], output_shapes: [torch.Size([1, 160, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0013s
60 batch_norm: input_from: [59], output_to: [61], output_shapes: [torch.Size([1, 160, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0013s
61 relu: input_from: [60], output_to: [62], output_shapes: [torch.Size([1, 160, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0013s
62 conv2d: input_from: [61], output_to: [63], output_shapes: [torch.Size([1, 128, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0013s
63 batch_norm: input_from: [62], output_to: [64], output_shapes: [torch.Size([1, 128, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0014s
64 relu: input_from: [63], output_to: [65], output_shapes: [torch.Size([1, 128, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0014s
65 conv2d: input_from: [64], output_to: [66, 73, 80, 87, 94, 101, 108, 115, 122, 129, 136], output_shapes: [torch.Size([1, 32, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0014s
66 cat: input_from: [51, 58, 65], output_to: [67], output_shapes: [torch.Size([1, 192, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0014s
67 batch_norm: input_from: [66], output_to: [68], output_shapes: [torch.Size([1, 192, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0014s
68 relu: input_from: [67], output_to: [69], output_shapes: [torch.Size([1, 192, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0014s
69 conv2d: input_from: [68], output_to: [70], output_shapes: [torch.Size([1, 128, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0015s
70 batch_norm: input_from: [69], output_to: [71], output_shapes: [torch.Size([1, 128, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0015s
71 relu: input_from: [70], output_to: [72], output_shapes: [torch.Size([1, 128, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0015s
72 conv2d: input_from: [71], output_to: [73, 80, 87, 94, 101, 108, 115, 122, 129, 136], output_shapes: [torch.Size([1, 32, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0015s
73 cat: input_from: [51, 58, 65, 72], output_to: [74], output_shapes: [torch.Size([1, 224, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0015s
74 batch_norm: input_from: [73], output_to: [75], output_shapes: [torch.Size([1, 224, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0016s
75 relu: input_from: [74], output_to: [76], output_shapes: [torch.Size([1, 224, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0016s
76 conv2d: input_from: [75], output_to: [77], output_shapes: [torch.Size([1, 128, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0016s
77 batch_norm: input_from: [76], output_to: [78], output_shapes: [torch.Size([1, 128, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0016s
78 relu: input_from: [77], output_to: [79], output_shapes: [torch.Size([1, 128, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0016s
79 conv2d: input_from: [78], output_to: [80, 87, 94, 101, 108, 115, 122, 129, 136], output_shapes: [torch.Size([1, 32, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0017s
80 cat: input_from: [51, 58, 65, 72, 79], output_to: [81], output_shapes: [torch.Size([1, 256, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0017s
81 batch_norm: input_from: [80], output_to: [82], output_shapes: [torch.Size([1, 256, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0017s
82 relu: input_from: [81], output_to: [83], output_shapes: [torch.Size([1, 256, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0017s
83 conv2d: input_from: [82], output_to: [84], output_shapes: [torch.Size([1, 128, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0017s
84 batch_norm: input_from: [83], output_to: [85], output_shapes: [torch.Size([1, 128, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0018s
85 relu: input_from: [84], output_to: [86], output_shapes: [torch.Size([1, 128, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0018s
86 conv2d: input_from: [85], output_to: [87, 94, 101, 108, 115, 122, 129, 136], output_shapes: [torch.Size([1, 32, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0018s
87 cat: input_from: [51, 58, 65, 72, 79, 86], output_to: [88], output_shapes: [torch.Size([1, 288, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0018s
88 batch_norm: input_from: [87], output_to: [89], output_shapes: [torch.Size([1, 288, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0018s
89 relu: input_from: [88], output_to: [90], output_shapes: [torch.Size([1, 288, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0018s
90 conv2d: input_from: [89], output_to: [91], output_shapes: [torch.Size([1, 128, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0019s
91 batch_norm: input_from: [90], output_to: [92], output_shapes: [torch.Size([1, 128, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0019s
92 relu: input_from: [91], output_to: [93], output_shapes: [torch.Size([1, 128, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0019s
93 conv2d: input_from: [92], output_to: [94, 101, 108, 115, 122, 129, 136], output_shapes: [torch.Size([1, 32, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0019s
94 cat: input_from: [51, 58, 65, 72, 79, 86, 93], output_to: [95], output_shapes: [torch.Size([1, 320, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0019s
95 batch_norm: input_from: [94], output_to: [96], output_shapes: [torch.Size([1, 320, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0020s
96 relu: input_from: [95], output_to: [97], output_shapes: [torch.Size([1, 320, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0020s
97 conv2d: input_from: [96], output_to: [98], output_shapes: [torch.Size([1, 128, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0020s
98 batch_norm: input_from: [97], output_to: [99], output_shapes: [torch.Size([1, 128, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0020s
99 relu: input_from: [98], output_to: [100], output_shapes: [torch.Size([1, 128, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0020s
100 conv2d: input_from: [99], output_to: [101, 108, 115, 122, 129, 136], output_shapes: [torch.Size([1, 32, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0021s
101 cat: input_from: [51, 58, 65, 72, 79, 86, 93, 100], output_to: [102], output_shapes: [torch.Size([1, 352, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0021s
102 batch_norm: input_from: [101], output_to: [103], output_shapes: [torch.Size([1, 352, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0021s
103 relu: input_from: [102], output_to: [104], output_shapes: [torch.Size([1, 352, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0021s
104 conv2d: input_from: [103], output_to: [105], output_shapes: [torch.Size([1, 128, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0021s
105 batch_norm: input_from: [104], output_to: [106], output_shapes: [torch.Size([1, 128, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0022s
106 relu: input_from: [105], output_to: [107], output_shapes: [torch.Size([1, 128, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0022s
107 conv2d: input_from: [106], output_to: [108, 115, 122, 129, 136], output_shapes: [torch.Size([1, 32, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0022s
108 cat: input_from: [51, 58, 65, 72, 79, 86, 93, 100, 107], output_to: [109], output_shapes: [torch.Size([1, 384, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0022s
109 batch_norm: input_from: [108], output_to: [110], output_shapes: [torch.Size([1, 384, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0022s
110 relu: input_from: [109], output_to: [111], output_shapes: [torch.Size([1, 384, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0023s
111 conv2d: input_from: [110], output_to: [112], output_shapes: [torch.Size([1, 128, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0023s
112 batch_norm: input_from: [111], output_to: [113], output_shapes: [torch.Size([1, 128, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0023s
113 relu: input_from: [112], output_to: [114], output_shapes: [torch.Size([1, 128, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0023s
114 conv2d: input_from: [113], output_to: [115, 122, 129, 136], output_shapes: [torch.Size([1, 32, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0024s
115 cat: input_from: [51, 58, 65, 72, 79, 86, 93, 100, 107, 114], output_to: [116], output_shapes: [torch.Size([1, 416, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0024s
116 batch_norm: input_from: [115], output_to: [117], output_shapes: [torch.Size([1, 416, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0024s
117 relu: input_from: [116], output_to: [118], output_shapes: [torch.Size([1, 416, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0024s
118 conv2d: input_from: [117], output_to: [119], output_shapes: [torch.Size([1, 128, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0024s
119 batch_norm: input_from: [118], output_to: [120], output_shapes: [torch.Size([1, 128, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0025s
120 relu: input_from: [119], output_to: [121], output_shapes: [torch.Size([1, 128, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0025s
121 conv2d: input_from: [120], output_to: [122, 129, 136], output_shapes: [torch.Size([1, 32, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0025s
122 cat: input_from: [51, 58, 65, 72, 79, 86, 93, 100, 107, 114, 121], output_to: [123], output_shapes: [torch.Size([1, 448, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0025s
123 batch_norm: input_from: [122], output_to: [124], output_shapes: [torch.Size([1, 448, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0025s
124 relu: input_from: [123], output_to: [125], output_shapes: [torch.Size([1, 448, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0026s
125 conv2d: input_from: [124], output_to: [126], output_shapes: [torch.Size([1, 128, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0026s
126 batch_norm: input_from: [125], output_to: [127], output_shapes: [torch.Size([1, 128, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0026s
127 relu: input_from: [126], output_to: [128], output_shapes: [torch.Size([1, 128, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0026s
128 conv2d: input_from: [127], output_to: [129, 136], output_shapes: [torch.Size([1, 32, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0027s
129 cat: input_from: [51, 58, 65, 72, 79, 86, 93, 100, 107, 114, 121, 128], output_to: [130], output_shapes: [torch.Size([1, 480, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0027s
130 batch_norm: input_from: [129], output_to: [131], output_shapes: [torch.Size([1, 480, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0027s
131 relu: input_from: [130], output_to: [132], output_shapes: [torch.Size([1, 480, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0027s
132 conv2d: input_from: [131], output_to: [133], output_shapes: [torch.Size([1, 128, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0028s
133 batch_norm: input_from: [132], output_to: [134], output_shapes: [torch.Size([1, 128, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0028s
134 relu: input_from: [133], output_to: [135], output_shapes: [torch.Size([1, 128, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0028s
135 conv2d: input_from: [134], output_to: [136], output_shapes: [torch.Size([1, 32, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0028s
136 cat: input_from: [51, 58, 65, 72, 79, 86, 93, 100, 107, 114, 121, 128, 135], output_to: [137], output_shapes: [torch.Size([1, 512, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0029s
137 batch_norm: input_from: [136], output_to: [138], output_shapes: [torch.Size([1, 512, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0029s
138 relu: input_from: [137], output_to: [139], output_shapes: [torch.Size([1, 512, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0029s
139 conv2d: input_from: [138], output_to: [140], output_shapes: [torch.Size([1, 256, 28, 28])], barrier: False, local dim: 3;  accu_time 0.0029s
140 avg_pool2d: input_from: [139], output_to: [141, 148, 155, 162, 169, 176, 183, 190, 197, 204, 211, 218, 225, 232, 239, 246, 253, 260, 267, 274, 281, 288, 295, 302, 309], output_shapes: [torch.Size([1, 256, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0029s
141 cat: input_from: [140], output_to: [142], output_shapes: [torch.Size([1, 256, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0030s
142 batch_norm: input_from: [141], output_to: [143], output_shapes: [torch.Size([1, 256, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0030s
143 relu: input_from: [142], output_to: [144], output_shapes: [torch.Size([1, 256, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0030s
144 conv2d: input_from: [143], output_to: [145], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0030s
145 batch_norm: input_from: [144], output_to: [146], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0031s
146 relu: input_from: [145], output_to: [147], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0031s
147 conv2d: input_from: [146], output_to: [148, 155, 162, 169, 176, 183, 190, 197, 204, 211, 218, 225, 232, 239, 246, 253, 260, 267, 274, 281, 288, 295, 302, 309], output_shapes: [torch.Size([1, 32, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0031s
148 cat: input_from: [140, 147], output_to: [149], output_shapes: [torch.Size([1, 288, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0031s
149 batch_norm: input_from: [148], output_to: [150], output_shapes: [torch.Size([1, 288, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0032s
150 relu: input_from: [149], output_to: [151], output_shapes: [torch.Size([1, 288, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0032s
151 conv2d: input_from: [150], output_to: [152], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0032s
152 batch_norm: input_from: [151], output_to: [153], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0033s
153 relu: input_from: [152], output_to: [154], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0033s
154 conv2d: input_from: [153], output_to: [155, 162, 169, 176, 183, 190, 197, 204, 211, 218, 225, 232, 239, 246, 253, 260, 267, 274, 281, 288, 295, 302, 309], output_shapes: [torch.Size([1, 32, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0033s
155 cat: input_from: [140, 147, 154], output_to: [156], output_shapes: [torch.Size([1, 320, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0033s
156 batch_norm: input_from: [155], output_to: [157], output_shapes: [torch.Size([1, 320, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0034s
157 relu: input_from: [156], output_to: [158], output_shapes: [torch.Size([1, 320, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0034s
158 conv2d: input_from: [157], output_to: [159], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0034s
159 batch_norm: input_from: [158], output_to: [160], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0034s
160 relu: input_from: [159], output_to: [161], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0034s
161 conv2d: input_from: [160], output_to: [162, 169, 176, 183, 190, 197, 204, 211, 218, 225, 232, 239, 246, 253, 260, 267, 274, 281, 288, 295, 302, 309], output_shapes: [torch.Size([1, 32, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0035s
162 cat: input_from: [140, 147, 154, 161], output_to: [163], output_shapes: [torch.Size([1, 352, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0035s
163 batch_norm: input_from: [162], output_to: [164], output_shapes: [torch.Size([1, 352, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0035s
164 relu: input_from: [163], output_to: [165], output_shapes: [torch.Size([1, 352, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0035s
165 conv2d: input_from: [164], output_to: [166], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0036s
166 batch_norm: input_from: [165], output_to: [167], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0036s
167 relu: input_from: [166], output_to: [168], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0036s
168 conv2d: input_from: [167], output_to: [169, 176, 183, 190, 197, 204, 211, 218, 225, 232, 239, 246, 253, 260, 267, 274, 281, 288, 295, 302, 309], output_shapes: [torch.Size([1, 32, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0037s
169 cat: input_from: [140, 147, 154, 161, 168], output_to: [170], output_shapes: [torch.Size([1, 384, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0037s
170 batch_norm: input_from: [169], output_to: [171], output_shapes: [torch.Size([1, 384, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0037s
171 relu: input_from: [170], output_to: [172], output_shapes: [torch.Size([1, 384, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0037s
172 conv2d: input_from: [171], output_to: [173], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0037s
173 batch_norm: input_from: [172], output_to: [174], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0038s
174 relu: input_from: [173], output_to: [175], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0038s
175 conv2d: input_from: [174], output_to: [176, 183, 190, 197, 204, 211, 218, 225, 232, 239, 246, 253, 260, 267, 274, 281, 288, 295, 302, 309], output_shapes: [torch.Size([1, 32, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0038s
176 cat: input_from: [140, 147, 154, 161, 168, 175], output_to: [177], output_shapes: [torch.Size([1, 416, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0038s
177 batch_norm: input_from: [176], output_to: [178], output_shapes: [torch.Size([1, 416, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0039s
178 relu: input_from: [177], output_to: [179], output_shapes: [torch.Size([1, 416, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0039s
179 conv2d: input_from: [178], output_to: [180], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0039s
180 batch_norm: input_from: [179], output_to: [181], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0039s
181 relu: input_from: [180], output_to: [182], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0040s
182 conv2d: input_from: [181], output_to: [183, 190, 197, 204, 211, 218, 225, 232, 239, 246, 253, 260, 267, 274, 281, 288, 295, 302, 309], output_shapes: [torch.Size([1, 32, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0040s
183 cat: input_from: [140, 147, 154, 161, 168, 175, 182], output_to: [184], output_shapes: [torch.Size([1, 448, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0040s
184 batch_norm: input_from: [183], output_to: [185], output_shapes: [torch.Size([1, 448, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0040s
185 relu: input_from: [184], output_to: [186], output_shapes: [torch.Size([1, 448, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0041s
186 conv2d: input_from: [185], output_to: [187], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0041s
187 batch_norm: input_from: [186], output_to: [188], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0041s
188 relu: input_from: [187], output_to: [189], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0041s
189 conv2d: input_from: [188], output_to: [190, 197, 204, 211, 218, 225, 232, 239, 246, 253, 260, 267, 274, 281, 288, 295, 302, 309], output_shapes: [torch.Size([1, 32, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0042s
190 cat: input_from: [140, 147, 154, 161, 168, 175, 182, 189], output_to: [191], output_shapes: [torch.Size([1, 480, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0042s
191 batch_norm: input_from: [190], output_to: [192], output_shapes: [torch.Size([1, 480, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0042s
192 relu: input_from: [191], output_to: [193], output_shapes: [torch.Size([1, 480, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0042s
193 conv2d: input_from: [192], output_to: [194], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0043s
194 batch_norm: input_from: [193], output_to: [195], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0043s
195 relu: input_from: [194], output_to: [196], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0043s
196 conv2d: input_from: [195], output_to: [197, 204, 211, 218, 225, 232, 239, 246, 253, 260, 267, 274, 281, 288, 295, 302, 309], output_shapes: [torch.Size([1, 32, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0044s
197 cat: input_from: [140, 147, 154, 161, 168, 175, 182, 189, 196], output_to: [198], output_shapes: [torch.Size([1, 512, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0044s
198 batch_norm: input_from: [197], output_to: [199], output_shapes: [torch.Size([1, 512, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0044s
199 relu: input_from: [198], output_to: [200], output_shapes: [torch.Size([1, 512, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0044s
200 conv2d: input_from: [199], output_to: [201], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0045s
201 batch_norm: input_from: [200], output_to: [202], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0045s
202 relu: input_from: [201], output_to: [203], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0045s
203 conv2d: input_from: [202], output_to: [204, 211, 218, 225, 232, 239, 246, 253, 260, 267, 274, 281, 288, 295, 302, 309], output_shapes: [torch.Size([1, 32, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0045s
204 cat: input_from: [140, 147, 154, 161, 168, 175, 182, 189, 196, 203], output_to: [205], output_shapes: [torch.Size([1, 544, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0046s
205 batch_norm: input_from: [204], output_to: [206], output_shapes: [torch.Size([1, 544, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0046s
206 relu: input_from: [205], output_to: [207], output_shapes: [torch.Size([1, 544, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0046s
207 conv2d: input_from: [206], output_to: [208], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0046s
208 batch_norm: input_from: [207], output_to: [209], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0047s
209 relu: input_from: [208], output_to: [210], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0047s
210 conv2d: input_from: [209], output_to: [211, 218, 225, 232, 239, 246, 253, 260, 267, 274, 281, 288, 295, 302, 309], output_shapes: [torch.Size([1, 32, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0047s
211 cat: input_from: [140, 147, 154, 161, 168, 175, 182, 189, 196, 203, 210], output_to: [212], output_shapes: [torch.Size([1, 576, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0048s
212 batch_norm: input_from: [211], output_to: [213], output_shapes: [torch.Size([1, 576, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0048s
213 relu: input_from: [212], output_to: [214], output_shapes: [torch.Size([1, 576, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0048s
214 conv2d: input_from: [213], output_to: [215], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0048s
215 batch_norm: input_from: [214], output_to: [216], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0049s
216 relu: input_from: [215], output_to: [217], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0049s
217 conv2d: input_from: [216], output_to: [218, 225, 232, 239, 246, 253, 260, 267, 274, 281, 288, 295, 302, 309], output_shapes: [torch.Size([1, 32, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0049s
218 cat: input_from: [140, 147, 154, 161, 168, 175, 182, 189, 196, 203, 210, 217], output_to: [219], output_shapes: [torch.Size([1, 608, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0049s
219 batch_norm: input_from: [218], output_to: [220], output_shapes: [torch.Size([1, 608, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0050s
220 relu: input_from: [219], output_to: [221], output_shapes: [torch.Size([1, 608, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0050s
221 conv2d: input_from: [220], output_to: [222], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0050s
222 batch_norm: input_from: [221], output_to: [223], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0051s
223 relu: input_from: [222], output_to: [224], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0051s
224 conv2d: input_from: [223], output_to: [225, 232, 239, 246, 253, 260, 267, 274, 281, 288, 295, 302, 309], output_shapes: [torch.Size([1, 32, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0051s
225 cat: input_from: [140, 147, 154, 161, 168, 175, 182, 189, 196, 203, 210, 217, 224], output_to: [226], output_shapes: [torch.Size([1, 640, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0051s
226 batch_norm: input_from: [225], output_to: [227], output_shapes: [torch.Size([1, 640, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0052s
227 relu: input_from: [226], output_to: [228], output_shapes: [torch.Size([1, 640, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0052s
228 conv2d: input_from: [227], output_to: [229], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0052s
229 batch_norm: input_from: [228], output_to: [230], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0052s
230 relu: input_from: [229], output_to: [231], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0052s
231 conv2d: input_from: [230], output_to: [232, 239, 246, 253, 260, 267, 274, 281, 288, 295, 302, 309], output_shapes: [torch.Size([1, 32, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0053s
232 cat: input_from: [140, 147, 154, 161, 168, 175, 182, 189, 196, 203, 210, 217, 224, 231], output_to: [233], output_shapes: [torch.Size([1, 672, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0053s
233 batch_norm: input_from: [232], output_to: [234], output_shapes: [torch.Size([1, 672, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0053s
234 relu: input_from: [233], output_to: [235], output_shapes: [torch.Size([1, 672, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0053s
235 conv2d: input_from: [234], output_to: [236], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0054s
236 batch_norm: input_from: [235], output_to: [237], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0054s
237 relu: input_from: [236], output_to: [238], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0054s
238 conv2d: input_from: [237], output_to: [239, 246, 253, 260, 267, 274, 281, 288, 295, 302, 309], output_shapes: [torch.Size([1, 32, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0055s
239 cat: input_from: [140, 147, 154, 161, 168, 175, 182, 189, 196, 203, 210, 217, 224, 231, 238], output_to: [240], output_shapes: [torch.Size([1, 704, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0055s
240 batch_norm: input_from: [239], output_to: [241], output_shapes: [torch.Size([1, 704, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0055s
241 relu: input_from: [240], output_to: [242], output_shapes: [torch.Size([1, 704, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0055s
242 conv2d: input_from: [241], output_to: [243], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0055s
243 batch_norm: input_from: [242], output_to: [244], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0056s
244 relu: input_from: [243], output_to: [245], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0056s
245 conv2d: input_from: [244], output_to: [246, 253, 260, 267, 274, 281, 288, 295, 302, 309], output_shapes: [torch.Size([1, 32, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0056s
246 cat: input_from: [140, 147, 154, 161, 168, 175, 182, 189, 196, 203, 210, 217, 224, 231, 238, 245], output_to: [247], output_shapes: [torch.Size([1, 736, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0056s
247 batch_norm: input_from: [246], output_to: [248], output_shapes: [torch.Size([1, 736, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0057s
248 relu: input_from: [247], output_to: [249], output_shapes: [torch.Size([1, 736, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0057s
249 conv2d: input_from: [248], output_to: [250], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0057s
250 batch_norm: input_from: [249], output_to: [251], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0057s
251 relu: input_from: [250], output_to: [252], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0058s
252 conv2d: input_from: [251], output_to: [253, 260, 267, 274, 281, 288, 295, 302, 309], output_shapes: [torch.Size([1, 32, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0058s
253 cat: input_from: [140, 147, 154, 161, 168, 175, 182, 189, 196, 203, 210, 217, 224, 231, 238, 245, 252], output_to: [254], output_shapes: [torch.Size([1, 768, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0058s
254 batch_norm: input_from: [253], output_to: [255], output_shapes: [torch.Size([1, 768, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0058s
255 relu: input_from: [254], output_to: [256], output_shapes: [torch.Size([1, 768, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0059s
256 conv2d: input_from: [255], output_to: [257], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0059s
257 batch_norm: input_from: [256], output_to: [258], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0059s
258 relu: input_from: [257], output_to: [259], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0059s
259 conv2d: input_from: [258], output_to: [260, 267, 274, 281, 288, 295, 302, 309], output_shapes: [torch.Size([1, 32, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0060s
260 cat: input_from: [140, 147, 154, 161, 168, 175, 182, 189, 196, 203, 210, 217, 224, 231, 238, 245, 252, 259], output_to: [261], output_shapes: [torch.Size([1, 800, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0060s
261 batch_norm: input_from: [260], output_to: [262], output_shapes: [torch.Size([1, 800, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0060s
262 relu: input_from: [261], output_to: [263], output_shapes: [torch.Size([1, 800, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0060s
263 conv2d: input_from: [262], output_to: [264], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0061s
264 batch_norm: input_from: [263], output_to: [265], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0061s
265 relu: input_from: [264], output_to: [266], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0061s
266 conv2d: input_from: [265], output_to: [267, 274, 281, 288, 295, 302, 309], output_shapes: [torch.Size([1, 32, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0061s
267 cat: input_from: [140, 147, 154, 161, 168, 175, 182, 189, 196, 203, 210, 217, 224, 231, 238, 245, 252, 259, 266], output_to: [268], output_shapes: [torch.Size([1, 832, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0062s
268 batch_norm: input_from: [267], output_to: [269], output_shapes: [torch.Size([1, 832, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0062s
269 relu: input_from: [268], output_to: [270], output_shapes: [torch.Size([1, 832, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0062s
270 conv2d: input_from: [269], output_to: [271], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0062s
271 batch_norm: input_from: [270], output_to: [272], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0063s
272 relu: input_from: [271], output_to: [273], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0063s
273 conv2d: input_from: [272], output_to: [274, 281, 288, 295, 302, 309], output_shapes: [torch.Size([1, 32, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0063s
274 cat: input_from: [140, 147, 154, 161, 168, 175, 182, 189, 196, 203, 210, 217, 224, 231, 238, 245, 252, 259, 266, 273], output_to: [275], output_shapes: [torch.Size([1, 864, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0063s
275 batch_norm: input_from: [274], output_to: [276], output_shapes: [torch.Size([1, 864, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0064s
276 relu: input_from: [275], output_to: [277], output_shapes: [torch.Size([1, 864, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0066s
277 conv2d: input_from: [276], output_to: [278], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0067s
278 batch_norm: input_from: [277], output_to: [279], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0067s
279 relu: input_from: [278], output_to: [280], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0067s
280 conv2d: input_from: [279], output_to: [281, 288, 295, 302, 309], output_shapes: [torch.Size([1, 32, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0068s
281 cat: input_from: [140, 147, 154, 161, 168, 175, 182, 189, 196, 203, 210, 217, 224, 231, 238, 245, 252, 259, 266, 273, 280], output_to: [282], output_shapes: [torch.Size([1, 896, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0068s
282 batch_norm: input_from: [281], output_to: [283], output_shapes: [torch.Size([1, 896, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0068s
283 relu: input_from: [282], output_to: [284], output_shapes: [torch.Size([1, 896, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0068s
284 conv2d: input_from: [283], output_to: [285], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0069s
285 batch_norm: input_from: [284], output_to: [286], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0069s
286 relu: input_from: [285], output_to: [287], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0069s
287 conv2d: input_from: [286], output_to: [288, 295, 302, 309], output_shapes: [torch.Size([1, 32, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0069s
288 cat: input_from: [140, 147, 154, 161, 168, 175, 182, 189, 196, 203, 210, 217, 224, 231, 238, 245, 252, 259, 266, 273, 280, 287], output_to: [289], output_shapes: [torch.Size([1, 928, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0070s
289 batch_norm: input_from: [288], output_to: [290], output_shapes: [torch.Size([1, 928, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0070s
290 relu: input_from: [289], output_to: [291], output_shapes: [torch.Size([1, 928, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0070s
291 conv2d: input_from: [290], output_to: [292], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0071s
292 batch_norm: input_from: [291], output_to: [293], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0071s
293 relu: input_from: [292], output_to: [294], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0071s
294 conv2d: input_from: [293], output_to: [295, 302, 309], output_shapes: [torch.Size([1, 32, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0072s
295 cat: input_from: [140, 147, 154, 161, 168, 175, 182, 189, 196, 203, 210, 217, 224, 231, 238, 245, 252, 259, 266, 273, 280, 287, 294], output_to: [296], output_shapes: [torch.Size([1, 960, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0072s
296 batch_norm: input_from: [295], output_to: [297], output_shapes: [torch.Size([1, 960, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0072s
297 relu: input_from: [296], output_to: [298], output_shapes: [torch.Size([1, 960, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0072s
298 conv2d: input_from: [297], output_to: [299], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0072s
299 batch_norm: input_from: [298], output_to: [300], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0073s
300 relu: input_from: [299], output_to: [301], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0073s
301 conv2d: input_from: [300], output_to: [302, 309], output_shapes: [torch.Size([1, 32, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0073s
302 cat: input_from: [140, 147, 154, 161, 168, 175, 182, 189, 196, 203, 210, 217, 224, 231, 238, 245, 252, 259, 266, 273, 280, 287, 294, 301], output_to: [303], output_shapes: [torch.Size([1, 992, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0074s
303 batch_norm: input_from: [302], output_to: [304], output_shapes: [torch.Size([1, 992, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0074s
304 relu: input_from: [303], output_to: [305], output_shapes: [torch.Size([1, 992, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0074s
305 conv2d: input_from: [304], output_to: [306], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0074s
306 batch_norm: input_from: [305], output_to: [307], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0075s
307 relu: input_from: [306], output_to: [308], output_shapes: [torch.Size([1, 128, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0075s
308 conv2d: input_from: [307], output_to: [309], output_shapes: [torch.Size([1, 32, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0075s
309 cat: input_from: [140, 147, 154, 161, 168, 175, 182, 189, 196, 203, 210, 217, 224, 231, 238, 245, 252, 259, 266, 273, 280, 287, 294, 301, 308], output_to: [310], output_shapes: [torch.Size([1, 1024, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0075s
310 batch_norm: input_from: [309], output_to: [311], output_shapes: [torch.Size([1, 1024, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0076s
311 relu: input_from: [310], output_to: [312], output_shapes: [torch.Size([1, 1024, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0076s
312 conv2d: input_from: [311], output_to: [313], output_shapes: [torch.Size([1, 512, 14, 14])], barrier: False, local dim: 3;  accu_time 0.0077s
313 avg_pool2d: input_from: [312], output_to: [314, 321, 328, 335, 342, 349, 356, 363, 370, 377, 384, 391, 398, 405, 412, 419, 426], output_shapes: [torch.Size([1, 512, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0077s
314 cat: input_from: [313], output_to: [315], output_shapes: [torch.Size([1, 512, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0077s
315 batch_norm: input_from: [314], output_to: [316], output_shapes: [torch.Size([1, 512, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0077s
316 relu: input_from: [315], output_to: [317], output_shapes: [torch.Size([1, 512, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0077s
317 conv2d: input_from: [316], output_to: [318], output_shapes: [torch.Size([1, 128, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0078s
318 batch_norm: input_from: [317], output_to: [319], output_shapes: [torch.Size([1, 128, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0078s
319 relu: input_from: [318], output_to: [320], output_shapes: [torch.Size([1, 128, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0078s
320 conv2d: input_from: [319], output_to: [321, 328, 335, 342, 349, 356, 363, 370, 377, 384, 391, 398, 405, 412, 419, 426], output_shapes: [torch.Size([1, 32, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0078s
321 cat: input_from: [313, 320], output_to: [322], output_shapes: [torch.Size([1, 544, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0079s
322 batch_norm: input_from: [321], output_to: [323], output_shapes: [torch.Size([1, 544, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0079s
323 relu: input_from: [322], output_to: [324], output_shapes: [torch.Size([1, 544, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0079s
324 conv2d: input_from: [323], output_to: [325], output_shapes: [torch.Size([1, 128, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0079s
325 batch_norm: input_from: [324], output_to: [326], output_shapes: [torch.Size([1, 128, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0080s
326 relu: input_from: [325], output_to: [327], output_shapes: [torch.Size([1, 128, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0080s
327 conv2d: input_from: [326], output_to: [328, 335, 342, 349, 356, 363, 370, 377, 384, 391, 398, 405, 412, 419, 426], output_shapes: [torch.Size([1, 32, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0080s
328 cat: input_from: [313, 320, 327], output_to: [329], output_shapes: [torch.Size([1, 576, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0080s
329 batch_norm: input_from: [328], output_to: [330], output_shapes: [torch.Size([1, 576, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0080s
330 relu: input_from: [329], output_to: [331], output_shapes: [torch.Size([1, 576, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0081s
331 conv2d: input_from: [330], output_to: [332], output_shapes: [torch.Size([1, 128, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0081s
332 batch_norm: input_from: [331], output_to: [333], output_shapes: [torch.Size([1, 128, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0081s
333 relu: input_from: [332], output_to: [334], output_shapes: [torch.Size([1, 128, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0081s
334 conv2d: input_from: [333], output_to: [335, 342, 349, 356, 363, 370, 377, 384, 391, 398, 405, 412, 419, 426], output_shapes: [torch.Size([1, 32, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0082s
335 cat: input_from: [313, 320, 327, 334], output_to: [336], output_shapes: [torch.Size([1, 608, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0082s
336 batch_norm: input_from: [335], output_to: [337], output_shapes: [torch.Size([1, 608, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0082s
337 relu: input_from: [336], output_to: [338], output_shapes: [torch.Size([1, 608, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0082s
338 conv2d: input_from: [337], output_to: [339], output_shapes: [torch.Size([1, 128, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0083s
339 batch_norm: input_from: [338], output_to: [340], output_shapes: [torch.Size([1, 128, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0083s
340 relu: input_from: [339], output_to: [341], output_shapes: [torch.Size([1, 128, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0083s
341 conv2d: input_from: [340], output_to: [342, 349, 356, 363, 370, 377, 384, 391, 398, 405, 412, 419, 426], output_shapes: [torch.Size([1, 32, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0083s
342 cat: input_from: [313, 320, 327, 334, 341], output_to: [343], output_shapes: [torch.Size([1, 640, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0083s
343 batch_norm: input_from: [342], output_to: [344], output_shapes: [torch.Size([1, 640, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0084s
344 relu: input_from: [343], output_to: [345], output_shapes: [torch.Size([1, 640, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0084s
345 conv2d: input_from: [344], output_to: [346], output_shapes: [torch.Size([1, 128, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0084s
346 batch_norm: input_from: [345], output_to: [347], output_shapes: [torch.Size([1, 128, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0085s
347 relu: input_from: [346], output_to: [348], output_shapes: [torch.Size([1, 128, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0085s
348 conv2d: input_from: [347], output_to: [349, 356, 363, 370, 377, 384, 391, 398, 405, 412, 419, 426], output_shapes: [torch.Size([1, 32, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0085s
349 cat: input_from: [313, 320, 327, 334, 341, 348], output_to: [350], output_shapes: [torch.Size([1, 672, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0085s
350 batch_norm: input_from: [349], output_to: [351], output_shapes: [torch.Size([1, 672, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0086s
351 relu: input_from: [350], output_to: [352], output_shapes: [torch.Size([1, 672, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0086s
352 conv2d: input_from: [351], output_to: [353], output_shapes: [torch.Size([1, 128, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0086s
353 batch_norm: input_from: [352], output_to: [354], output_shapes: [torch.Size([1, 128, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0086s
354 relu: input_from: [353], output_to: [355], output_shapes: [torch.Size([1, 128, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0086s
355 conv2d: input_from: [354], output_to: [356, 363, 370, 377, 384, 391, 398, 405, 412, 419, 426], output_shapes: [torch.Size([1, 32, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0087s
356 cat: input_from: [313, 320, 327, 334, 341, 348, 355], output_to: [357], output_shapes: [torch.Size([1, 704, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0087s
357 batch_norm: input_from: [356], output_to: [358], output_shapes: [torch.Size([1, 704, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0087s
358 relu: input_from: [357], output_to: [359], output_shapes: [torch.Size([1, 704, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0088s
359 conv2d: input_from: [358], output_to: [360], output_shapes: [torch.Size([1, 128, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0088s
360 batch_norm: input_from: [359], output_to: [361], output_shapes: [torch.Size([1, 128, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0088s
361 relu: input_from: [360], output_to: [362], output_shapes: [torch.Size([1, 128, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0088s
362 conv2d: input_from: [361], output_to: [363, 370, 377, 384, 391, 398, 405, 412, 419, 426], output_shapes: [torch.Size([1, 32, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0089s
363 cat: input_from: [313, 320, 327, 334, 341, 348, 355, 362], output_to: [364], output_shapes: [torch.Size([1, 736, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0089s
364 batch_norm: input_from: [363], output_to: [365], output_shapes: [torch.Size([1, 736, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0089s
365 relu: input_from: [364], output_to: [366], output_shapes: [torch.Size([1, 736, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0089s
366 conv2d: input_from: [365], output_to: [367], output_shapes: [torch.Size([1, 128, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0090s
367 batch_norm: input_from: [366], output_to: [368], output_shapes: [torch.Size([1, 128, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0090s
368 relu: input_from: [367], output_to: [369], output_shapes: [torch.Size([1, 128, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0090s
369 conv2d: input_from: [368], output_to: [370, 377, 384, 391, 398, 405, 412, 419, 426], output_shapes: [torch.Size([1, 32, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0090s
370 cat: input_from: [313, 320, 327, 334, 341, 348, 355, 362, 369], output_to: [371], output_shapes: [torch.Size([1, 768, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0091s
371 batch_norm: input_from: [370], output_to: [372], output_shapes: [torch.Size([1, 768, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0091s
372 relu: input_from: [371], output_to: [373], output_shapes: [torch.Size([1, 768, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0091s
373 conv2d: input_from: [372], output_to: [374], output_shapes: [torch.Size([1, 128, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0091s
374 batch_norm: input_from: [373], output_to: [375], output_shapes: [torch.Size([1, 128, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0092s
375 relu: input_from: [374], output_to: [376], output_shapes: [torch.Size([1, 128, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0092s
376 conv2d: input_from: [375], output_to: [377, 384, 391, 398, 405, 412, 419, 426], output_shapes: [torch.Size([1, 32, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0092s
377 cat: input_from: [313, 320, 327, 334, 341, 348, 355, 362, 369, 376], output_to: [378], output_shapes: [torch.Size([1, 800, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0092s
378 batch_norm: input_from: [377], output_to: [379], output_shapes: [torch.Size([1, 800, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0093s
379 relu: input_from: [378], output_to: [380], output_shapes: [torch.Size([1, 800, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0093s
380 conv2d: input_from: [379], output_to: [381], output_shapes: [torch.Size([1, 128, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0093s
381 batch_norm: input_from: [380], output_to: [382], output_shapes: [torch.Size([1, 128, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0093s
382 relu: input_from: [381], output_to: [383], output_shapes: [torch.Size([1, 128, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0093s
383 conv2d: input_from: [382], output_to: [384, 391, 398, 405, 412, 419, 426], output_shapes: [torch.Size([1, 32, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0094s
384 cat: input_from: [313, 320, 327, 334, 341, 348, 355, 362, 369, 376, 383], output_to: [385], output_shapes: [torch.Size([1, 832, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0094s
385 batch_norm: input_from: [384], output_to: [386], output_shapes: [torch.Size([1, 832, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0094s
386 relu: input_from: [385], output_to: [387], output_shapes: [torch.Size([1, 832, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0094s
387 conv2d: input_from: [386], output_to: [388], output_shapes: [torch.Size([1, 128, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0095s
388 batch_norm: input_from: [387], output_to: [389], output_shapes: [torch.Size([1, 128, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0095s
389 relu: input_from: [388], output_to: [390], output_shapes: [torch.Size([1, 128, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0095s
390 conv2d: input_from: [389], output_to: [391, 398, 405, 412, 419, 426], output_shapes: [torch.Size([1, 32, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0095s
391 cat: input_from: [313, 320, 327, 334, 341, 348, 355, 362, 369, 376, 383, 390], output_to: [392], output_shapes: [torch.Size([1, 864, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0095s
392 batch_norm: input_from: [391], output_to: [393], output_shapes: [torch.Size([1, 864, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0096s
393 relu: input_from: [392], output_to: [394], output_shapes: [torch.Size([1, 864, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0096s
394 conv2d: input_from: [393], output_to: [395], output_shapes: [torch.Size([1, 128, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0096s
395 batch_norm: input_from: [394], output_to: [396], output_shapes: [torch.Size([1, 128, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0097s
396 relu: input_from: [395], output_to: [397], output_shapes: [torch.Size([1, 128, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0097s
397 conv2d: input_from: [396], output_to: [398, 405, 412, 419, 426], output_shapes: [torch.Size([1, 32, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0097s
398 cat: input_from: [313, 320, 327, 334, 341, 348, 355, 362, 369, 376, 383, 390, 397], output_to: [399], output_shapes: [torch.Size([1, 896, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0097s
399 batch_norm: input_from: [398], output_to: [400], output_shapes: [torch.Size([1, 896, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0097s
400 relu: input_from: [399], output_to: [401], output_shapes: [torch.Size([1, 896, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0098s
401 conv2d: input_from: [400], output_to: [402], output_shapes: [torch.Size([1, 128, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0098s
402 batch_norm: input_from: [401], output_to: [403], output_shapes: [torch.Size([1, 128, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0098s
403 relu: input_from: [402], output_to: [404], output_shapes: [torch.Size([1, 128, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0098s
404 conv2d: input_from: [403], output_to: [405, 412, 419, 426], output_shapes: [torch.Size([1, 32, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0099s
405 cat: input_from: [313, 320, 327, 334, 341, 348, 355, 362, 369, 376, 383, 390, 397, 404], output_to: [406], output_shapes: [torch.Size([1, 928, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0099s
406 batch_norm: input_from: [405], output_to: [407], output_shapes: [torch.Size([1, 928, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0099s
407 relu: input_from: [406], output_to: [408], output_shapes: [torch.Size([1, 928, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0099s
408 conv2d: input_from: [407], output_to: [409], output_shapes: [torch.Size([1, 128, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0100s
409 batch_norm: input_from: [408], output_to: [410], output_shapes: [torch.Size([1, 128, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0100s
410 relu: input_from: [409], output_to: [411], output_shapes: [torch.Size([1, 128, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0100s
411 conv2d: input_from: [410], output_to: [412, 419, 426], output_shapes: [torch.Size([1, 32, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0100s
412 cat: input_from: [313, 320, 327, 334, 341, 348, 355, 362, 369, 376, 383, 390, 397, 404, 411], output_to: [413], output_shapes: [torch.Size([1, 960, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0100s
413 batch_norm: input_from: [412], output_to: [414], output_shapes: [torch.Size([1, 960, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0101s
414 relu: input_from: [413], output_to: [415], output_shapes: [torch.Size([1, 960, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0101s
415 conv2d: input_from: [414], output_to: [416], output_shapes: [torch.Size([1, 128, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0101s
416 batch_norm: input_from: [415], output_to: [417], output_shapes: [torch.Size([1, 128, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0101s
417 relu: input_from: [416], output_to: [418], output_shapes: [torch.Size([1, 128, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0102s
418 conv2d: input_from: [417], output_to: [419, 426], output_shapes: [torch.Size([1, 32, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0102s
419 cat: input_from: [313, 320, 327, 334, 341, 348, 355, 362, 369, 376, 383, 390, 397, 404, 411, 418], output_to: [420], output_shapes: [torch.Size([1, 992, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0102s
420 batch_norm: input_from: [419], output_to: [421], output_shapes: [torch.Size([1, 992, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0102s
421 relu: input_from: [420], output_to: [422], output_shapes: [torch.Size([1, 992, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0102s
422 conv2d: input_from: [421], output_to: [423], output_shapes: [torch.Size([1, 128, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0103s
423 batch_norm: input_from: [422], output_to: [424], output_shapes: [torch.Size([1, 128, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0103s
424 relu: input_from: [423], output_to: [425], output_shapes: [torch.Size([1, 128, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0103s
425 conv2d: input_from: [424], output_to: [426], output_shapes: [torch.Size([1, 32, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0104s
426 cat: input_from: [313, 320, 327, 334, 341, 348, 355, 362, 369, 376, 383, 390, 397, 404, 411, 418, 425], output_to: [427], output_shapes: [torch.Size([1, 1024, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0104s
427 batch_norm: input_from: [426], output_to: [428], output_shapes: [torch.Size([1, 1024, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0104s
428 relu: input_from: [427], output_to: [429], output_shapes: [torch.Size([1, 1024, 7, 7])], barrier: False, local dim: 3;  accu_time 0.0104s
429 adaptive_avg_pool2d: input_from: [428], output_to: [430], output_shapes: [torch.Size([1, 1024, 1, 1])], barrier: True, local dim: None;  accu_time 0.0104s
430 flatten: input_from: [429], output_to: [431], output_shapes: [torch.Size([1, 1024])], barrier: True, local dim: None;  accu_time 0.0104s
431 linear: input_from: [430], output_to: [432], output_shapes: [torch.Size([1, 1000])], barrier: True, local dim: None;  accu_time 0.0105s
432 _end: input_from: [431], output_to: [-1], output_shapes: [torch.Size([1, 1000])], barrier: True, local dim: None;  accu_time 0.0105s
total 433 ops (filtered from 554 ops); time 0.0105s (aligned by 0.3626 sleep_step 100).

Computing plan for client.
Number of local ops 428
Number of global ops -429
server for ('192.168.50.102', 40636): init forward complete.
bw 0MB/s offload at [] recv at [] sleep for 0 ops est time 0.0662s.
bw 1MB/s offload at [] recv at [] sleep for 0 ops est time 0.0662s.
bw 2MB/s offload at [] recv at [] sleep for 0 ops est time 0.0662s.
bw 3MB/s offload at [] recv at [] sleep for 0 ops est time 0.0662s.
bw 4MB/s offload at [431] recv at [313] sleep for 2 ops est time 0.0649s.
bw 5MB/s offload at [431] recv at [313] sleep for 2 ops est time 0.0599s.
bw 6MB/s offload at [431] recv at [313] sleep for 2 ops est time 0.0566s.
bw 7MB/s offload at [431] recv at [313] sleep for 2 ops est time 0.0543s.
bw 8MB/s offload at [431] recv at [140] sleep for 3 ops est time 0.0517s.
bw 9MB/s offload at [431] recv at [140] sleep for 3 ops est time 0.0490s.
bw 10MB/s offload at [431] recv at [140] sleep for 3 ops est time 0.0468s.
bw 11MB/s offload at [431] recv at [140] sleep for 3 ops est time 0.0450s.
bw 12MB/s offload at [431] recv at [140] sleep for 3 ops est time 0.0436s.
bw 13MB/s offload at [431] recv at [140] sleep for 3 ops est time 0.0423s.
bw 14MB/s offload at [431] recv at [140] sleep for 3 ops est time 0.0412s.
bw 15MB/s offload at [431] recv at [140] sleep for 3 ops est time 0.0403s.
bw 16MB/s offload at [431] recv at [140] sleep for 3 ops est time 0.0395s.
bw 17MB/s offload at [431] recv at [140] sleep for 3 ops est time 0.0388s.
bw 18MB/s offload at [431] recv at [140] sleep for 3 ops est time 0.0381s.
bw 19MB/s offload at [431] recv at [140] sleep for 3 ops est time 0.0376s.
bw 20MB/s offload at [431] recv at [140] sleep for 3 ops est time 0.0370s.
bw 21MB/s offload at [431] recv at [140] sleep for 3 ops est time 0.0366s.
bw 22MB/s offload at [431] recv at [140] sleep for 3 ops est time 0.0362s.
bw 23MB/s offload at [431] recv at [140] sleep for 3 ops est time 0.0358s.
bw 24MB/s offload at [431] recv at [140] sleep for 3 ops est time 0.0354s.
bw 25MB/s offload at [431] recv at [140] sleep for 3 ops est time 0.0351s.
bw 26MB/s offload at [431] recv at [140] sleep for 3 ops est time 0.0348s.
bw 27MB/s offload at [431] recv at [140] sleep for 3 ops est time 0.0345s.
bw 28MB/s offload at [431] recv at [140] sleep for 3 ops est time 0.0343s.
bw 29MB/s offload at [431] recv at [51] sleep for 4 ops est time 0.0342s.
bw 30MB/s offload at [431] recv at [0] sleep for 5 ops est time 0.0332s.
Started send loop.
Started recv loop.
server for ('192.168.50.102', 40636): terminating server...
server for ('192.168.50.102', 40636): terminated.
Stopped server.
